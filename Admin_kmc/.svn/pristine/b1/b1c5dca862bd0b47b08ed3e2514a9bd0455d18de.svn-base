package cn.com.infosec.netcert.kmcAdmin.ui.admin;

import java.io.FileInputStream;
import java.security.cert.Certificate;
import java.security.cert.CertificateFactory;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.ResourceBundle;

import org.eclipse.jface.action.Action;
import org.eclipse.jface.action.MenuManager;
import org.eclipse.jface.action.Separator;
import org.eclipse.jface.window.ApplicationWindow;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.layout.FormAttachment;
import org.eclipse.swt.layout.FormData;
import org.eclipse.swt.layout.FormLayout;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.FileDialog;
import org.eclipse.swt.widgets.Group;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.MessageBox;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableColumn;
import org.eclipse.swt.widgets.TableItem;
import org.eclipse.swt.widgets.Text;

import cn.com.infosec.netcert.base.Response;
import cn.com.infosec.netcert.framework.ServerException;
import cn.com.infosec.netcert.framework.log.FileLogger;
import cn.com.infosec.netcert.kmcAdmin.utils.Env;
import cn.com.infosec.util.Base64;

/**
 * SA & AA 视图
 * @Author 江岩    
 * @Time 2019-06-10 17:11
 */
public class SA_AA extends ApplicationWindow {
	private Label lb_uname;
	private Table table;
	private Text txt_cer;
	private Button btnChk;

	public static final String BA_Policy = "(MODIFYOPERATORID,APPLYOPERATORID,DELETEOPERATORID,ADDCA,LOGIN,VIEWOPERATORIDS,VIEWCASTATE,RELOADCACHANNEL,UPDATECA,SETCASTATE,ENABLEOPERATORID)",
			AO_Policy = "(AUDITLOG,BACKUPLOGS,VIEWLOGDETAIL,LOGIN,VIEWLOGS)";

	private List<Properties> rows = new ArrayList<Properties>();
	private String cerB64 = null;
	private char currRole;
	private static ResourceBundle l = Env.getLanguage();

	private FileLogger log = FileLogger.getLogger(this.getClass());
	/**
	 * 构造方法
	 */
	public SA_AA(char role) {
		super(null);
		this.currRole = role;
		setShellStyle(SWT.CLOSE | SWT.MIN);
		addMenuBar();
	}

	/**
	 * 视图 页面 
	 * @Author 江岩      
	 * @Time 2019-06-10 17:11
	 * @version 1.0
	 */
	@Override
	protected Control createContents(Composite parent) {
		Composite container = new Composite(parent, SWT.NONE);
		container.setLayout(new FormLayout());

		Group group = new Group(container, SWT.NONE);
		FormData fd_group = new FormData();
		fd_group.bottom = new FormAttachment(0, 302);
		fd_group.right = new FormAttachment(0, 558);
		fd_group.top = new FormAttachment(0, 10);
		fd_group.left = new FormAttachment(0, 10);
		group.setLayoutData(fd_group);
		if (Env.Role_SA == currRole){
			group.setText(l.getString("adminList"));
		} else {
			group.setText(l.getString("AOList"));
		}

		table = new Table(group, SWT.BORDER | SWT.FULL_SELECTION);
		table.setBounds(10, 21, 528, 261);
		table.setHeaderVisible(true);
		table.setLinesVisible(true);
		table.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				int i = table.getSelectionIndex();
				lb_uname.setText(rows.get(i).getProperty("ID"));
				String st = rows.get(i).getProperty("STATUS");
				btnChk.setSelection("0".equals(st));
			}
		});

		TableColumn tblclmnNewColumn = new TableColumn(table, SWT.NONE);
		tblclmnNewColumn.setWidth(146);
		tblclmnNewColumn.setText(l.getString("username"));

		TableColumn tblclmnNewColumn_1 = new TableColumn(table, SWT.NONE);
		tblclmnNewColumn_1.setWidth(132);
		tblclmnNewColumn_1.setText(l.getString("role"));

		TableColumn tblclmnNewColumn_2 = new TableColumn(table, SWT.NONE);
		tblclmnNewColumn_2.setWidth(154);
		tblclmnNewColumn_2.setText(l.getString("state"));

		Group group_1 = new Group(container, SWT.NONE);
		FormData fd_group_1 = new FormData();
		fd_group_1.bottom = new FormAttachment(0, 549);
		fd_group_1.right = new FormAttachment(0, 558);
		fd_group_1.top = new FormAttachment(0, 318);
		fd_group_1.left = new FormAttachment(0, 10);
		group_1.setLayoutData(fd_group_1);
		group_1.setText(l.getString("adminInfo"));

		GridLayout gl_group_1 = new GridLayout(3, false);
		gl_group_1.marginTop = 10;
		gl_group_1.marginBottom = 10;
		gl_group_1.marginLeft = 10;
		gl_group_1.marginRight = 10;
		gl_group_1.horizontalSpacing = 10;
		gl_group_1.verticalSpacing = 15;
		group_1.setLayout(gl_group_1);

		Label lbl_userName = new Label(group_1, SWT.NONE);
		lbl_userName.setText(l.getString("username") + "：");
		GridData gd_lbl_userName = new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1);
		gd_lbl_userName.widthHint = 103;
		lbl_userName.setLayoutData(gd_lbl_userName);
		lbl_userName.setAlignment(SWT.RIGHT);

		lb_uname = new Label(group_1, SWT.NONE);
		GridData gd_lblNewLabel_3 = new GridData(SWT.LEFT, SWT.CENTER, false, false, 1, 1);
		gd_lblNewLabel_3.widthHint = 126;
		lb_uname.setLayoutData(gd_lblNewLabel_3);
		lb_uname.setText("");
		new Label(group_1, SWT.NONE);

		Label lbl_cert = new Label(group_1, SWT.NONE);
		lbl_cert.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1));
		lbl_cert.setAlignment(SWT.RIGHT);
		lbl_cert.setText(l.getString("cert") + "：");

		txt_cer = new Text(group_1, SWT.BORDER | SWT.READ_ONLY);
		GridData gd_txt_cer = new GridData(SWT.LEFT, SWT.CENTER, false, false, 1, 1);
		gd_txt_cer.widthHint = 144;
		txt_cer.setLayoutData(gd_txt_cer);

		Button btn_editCer = new Button(group_1, SWT.NONE);
		btn_editCer.setText(l.getString("browse"));
		GridData gd_editCer = new GridData(SWT.LEFT, SWT.CENTER, false, false, 1, 1);
		gd_editCer.widthHint = 75;
		btn_editCer.setLayoutData(gd_editCer);
		btn_editCer.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				FileDialog fd = new FileDialog(getShell(), SWT.OPEN);
				fd.setFilterExtensions(new String[] { "*.cer" });
				String f = fd.open();
				if (f != null) {
					try {
						CertificateFactory cf = CertificateFactory.getInstance("X.509", "INFOSEC");
						FileInputStream fin = new FileInputStream(f);
						Certificate cer = cf.generateCertificate(fin);
						fin.close();
						cerB64 = Base64.encode(cer.getEncoded());
						txt_cer.setText(f);
					} catch (Exception ee) {
						txt_cer.setText("");
						log.errlog("Choose cert fail", ee);
						MessageBox mb = new MessageBox(getShell(), SWT.ERROR);
						mb.setMessage(l.getString("Notice_error_CACertFormat"));
						mb.open();
					}
				}
			}
		});

		Label lbl_state = new Label(group_1, SWT.NONE);
		lbl_state.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1));
		lbl_state.setAlignment(SWT.RIGHT);
		lbl_state.setText(l.getString("state") + "：");

		btnChk = new Button(group_1, SWT.CHECK);
		GridData gd_btnChk = new GridData(SWT.LEFT, SWT.CENTER, false, false, 1, 1);
		gd_btnChk.heightHint = 23;
		btnChk.setLayoutData(gd_btnChk);
		btnChk.setText(l.getString("valid"));
		new Label(group_1, SWT.NONE);
		new Label(group_1, SWT.NONE);

		Button btn_Change = new Button(group_1, SWT.NONE);
		btn_Change.setText(l.getString("modify"));
		GridData gd_btnChange = new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1);
		gd_btnChange.widthHint = 76;
		btn_Change.setLayoutData(gd_btnChange);
		new Label(group_1, SWT.NONE);
		btn_Change.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				if (!Env.validSession()) {
					handleShellCloseEvent();
				} else {
					Env.setLastOperationTime();
					if (lb_uname.getText() == null || lb_uname.getText().length() == 0) {
						MessageBox mb = new MessageBox(getShell());
						mb.setMessage(l.getString("Notice_not_chooseAdmin"));
						mb.open();
						return;
					}
					String reqType = null;
					Properties p = new Properties();
					p.setProperty("ID", lb_uname.getText().trim());
					try {
						if (txt_cer.getText().trim().length() > 0 && cerB64 != null) {
							String policy = null;
							if (Env.Role_SA == currRole) {
								reqType = "MODIFYID";
								policy = String.valueOf(Env.Role_BA) + SA_AA.BA_Policy;
							} else if (Env.Role_AA == currRole) {
								reqType = "MODIFYAUDITID";
								policy = String.valueOf(Env.Role_AO) + SA_AA.AO_Policy;
							}
							p.setProperty("POLICY", policy);
							p.setProperty("CERT", cerB64);
							Env.client.sendRequest(reqType, p);
						}
						if (Env.Role_SA == currRole) {
							if (btnChk.getSelection()) {	
								reqType = "ENABLEID";
							} else {
								reqType = "DELETEID";
							}
						} else if (Env.Role_AA == currRole) {
							if (btnChk.getSelection()) {
								reqType = "ENABLEAUDITID";
							} else{
								reqType = "DELETEAUDITID";
							}
						}
						Env.client.sendRequest(reqType, p);

						MessageBox mb = new MessageBox(getShell());
						mb.setMessage(l.getString("Notice_succ_modifyAdminInfo"));
						mb.open();

						refresh();
					} catch (ServerException se) {
						log.errlog("Modify admin info fail", se);
						MessageBox mb = new MessageBox(getShell(), SWT.ERROR);
						mb.setMessage(l.getString("Notice_fail_modifyAdminInfo") + "[" + se.getErrorNum() + "]："
								+ se.getErrorMsg());
						mb.open();
					} catch (Exception ee) {
						log.errlog("Modify admin info fail", ee);
						MessageBox mb = new MessageBox(getShell(), SWT.ERROR);
						mb.setMessage(l.getString("Notice_fail_modifyAdminInfo"));
						mb.open();
					}
				}
			}
		});
		refresh();
		return container;
	}

	/**
	 * 刷新页面内容 
	 * @Author 江岩 
	 * @Time   2019-06-10 17:12
	 * @version 1.0
	 */
	void refresh() {
		this.rows.clear();
		table.removeAll();
		lb_uname.setText("");
		txt_cer.setText("");
		btnChk.setSelection(false);
		try {
			String reqType = "VIEWIDS";
			if (Env.Role_AA == currRole){
				reqType = "VIEWAUDITIDS";
			}
			Response res = Env.client.sendRequest(reqType, new Properties());
			Properties[] ps = res.getPs();
			for (Properties p : ps) {
				this.rows.add(p);
			}
		} catch (ServerException se) {
			log.errlog("Query admin ID fail", se);
			MessageBox mb = new MessageBox(getShell(), SWT.ERROR);
			mb.setMessage(l.getString("Notice_fail_viewOperation") + "[" + se.getErrorNum() + "]：" + se.getErrorMsg());
			mb.open();
		} catch (Exception ee) {
			log.errlog("Query admin ID fail", ee);
			MessageBox mb = new MessageBox(getShell(), SWT.ERROR);
			mb.setMessage(l.getString("Notice_fail_viewOperation"));
			mb.open();
		}
		for (Properties p : this.rows) {
			String name = p.getProperty("ID");
			String _st = p.getProperty("STATUS");
			String st = ("0".equals(_st) ? l.getString("valid") : l.getString("halted"));
			TableItem ti = new TableItem(table, SWT.NONE);
			String adminType = l.getString("BA");
			if (Env.Role_AA == currRole) {
				adminType = l.getString("AO");
			}
			ti.setText(new String[] { name, adminType, st });
		}
	}

	/**
	 * 视图菜单栏 
	 * @Author 江岩      
	 * @Time 2019-06-10 17:13
	 * @version 1.0
	 */
	@Override
	protected MenuManager createMenuManager() {
		MenuManager mm = new MenuManager();

		MenuManager menu = new MenuManager(l.getString("menu"));
		menu.add(new AddAction());
		menu.add(new Separator());
		menu.add(new ExitAction());

		mm.add(menu);
		return mm;
	}

	/**
	 * 视图标题栏命名
	 * @param (Shell)
	 * @Author 江岩      
	 * @Time 2019-06-10 17:13
	 * @version 1.0
	 */
	@Override
	protected void configureShell(Shell shell) {
		super.configureShell(shell);
		if (Env.Role_SA == currRole){
			shell.setText(l.getString("SA"));
		} else if (Env.Role_AA == currRole){
			shell.setText(l.getString("AA"));
		}
		shell.setImage(new Image(shell.getDisplay(), "res/logo.png"));
	}

	/**
	 * new BA / AO
	 * @Author 江岩    
	 * @Time 2019-06-10 17:14
	 */
	class AddAction extends Action {
		public AddAction() {
			if (Env.Role_SA == currRole){
				setText(l.getString("newAdmin"));
			} else {
				setText(l.getString("newAO"));
			}
		}
		public void run() {
			Panel_NewBA_AO pb = new Panel_NewBA_AO(currRole);
			pb.setBlockOnOpen(true);
			int w = pb.open();
			if (w == 0){
				refresh();
			}
		}
	}

	/**
	 * 退出事件
	 * @Author 江岩    
	 * @Time 2019-06-10 17:15
	 */
	class ExitAction extends Action {
		public ExitAction() {
			setText(l.getString("exit"));
		}
		public void run() {		
			handleShellCloseEvent();
		}
	}
	/**
	 * 重写窗口关闭事件,主动关闭按钮触发
	 * @Description 在关闭窗口之前，释放占用的key资源
	 * @Author 江岩
	 * @Time 2019-06-04 19:20
	 * @version 1.0
	 */
	@Override
	public void handleShellCloseEvent() {
		int closeCode = -1;
		if (!Env.validSession()) {
			MessageBox messagebox = new MessageBox(getShell());
			messagebox.setMessage(l.getString("Notice_invalidSession"));
			messagebox.open();
			closeCode = SWT.YES;
		} else {
			MessageBox messagebox = new MessageBox(getShell(), SWT.ICON_QUESTION | SWT.YES | SWT.NO);
			messagebox.setMessage(l.getString("Notice_exit") + "?");
			closeCode = messagebox.open();
		}
		if (closeCode == SWT.YES) {
			MessageBox mb = new MessageBox(getShell(), SWT.ICON_INFORMATION);
			mb.setMessage(l.getString("Notice_removeCert"));
			mb.open();
			super.handleShellCloseEvent();
		}
	}
}
